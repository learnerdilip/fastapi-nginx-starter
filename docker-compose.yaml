version: "3"
services:
  fast-api-backend:
    build: .
    image: fast-api-backend
    container_name: fast-api-backend
    restart: always
    volumes:
      - ./app:/code/app
      - ./alembic:/code/alembic # alembic is the migration tool for sqlalchemy
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: ${POSTGRES_HOST}
      DATABASE_TYPE: ${DATABASE_TYPE}
      DATABASE_PORT: ${DATABASE_PORT}
      MODBUS_TCP_HOST: ${MODBUS_TCP_HOST}
      MODBUS_TCP_PORT1: ${MODBUS_TCP_PORT1}
      MODBUS_TCP_PORT2: ${MODBUS_TCP_PORT2}
    env_file:
      - .env
    depends_on:
      - db
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000"]
      interval: 30s
      timeout: 10s
      retries: 5

  nginx:
    image: nginx:latest
    container_name: nginx
    restart: always
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ${CERT_PATH}:/etc/ssl/certs/cert.pem
      - ${KEY_PATH}:/etc/ssl/private/key.pem
    ports:
      - "443:443"
      - "80:80"
    depends_on:
      - fast-api-backend
    healthcheck:
      test: ["CMD", "curl", "-k", "-f", "https://localhost"]
      interval: 30s
      timeout: 10s
      retries: 5

  db:
    image: postgres
    container_name: fleet_db
    restart: always
    volumes:
      - db-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-U", "${POSTGRES_USER}"]
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  db-data:
